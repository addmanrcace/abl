{"ast":null,"code":"var _jsxFileName = \"/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport { SEARCH_BOOKS } from '../types';\nimport dotenv from 'dotenv';\n\nconst BookState = props => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false\n  };\n  const env = dotenv.config();\n  console.log(env);\n  const [state, dispatch] = useReducer(BookReducer, initialState); // Search Books\n\n  const searchBooks = async text => {\n    console.log('started search');\n    const res = await axios.get(`https://www.goodreads.com/search/index.xml?key=${text}&q=${text}`);\n    console.log(res);\n    dispatch({\n      type: SEARCH_BOOKS,\n      payload: res.data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(BookContext.Provider, {\n    value: {\n      books: state.books,\n      // book: state.book,\n      // loading: state.loading,\n      searchBooks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BookState;","map":{"version":3,"sources":["/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js"],"names":["React","useReducer","axios","BookContext","BookReducer","SEARCH_BOOKS","dotenv","BookState","props","initialState","books","book","loading","env","config","console","log","state","dispatch","searchBooks","text","res","get","type","payload","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB;AAMA,QAAMC,GAAG,GAAGP,MAAM,CAACQ,MAAP,EAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,WAAD,EAAcK,YAAd,CAApC,CAX2B,CAa3B;;AACA,QAAMU,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAMK,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,kDAAiDF,IAAK,MAAKA,IAAK,EAA3E,CAAlB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAElB,YAAR;AAAsBmB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAnC,KAAD,CAAR;AACD,GALD;;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAEL;AACA;AACAS,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGX,KAAK,CAACkB,QART,CADF;AAYD,CAjCD;;AAmCA,eAAenB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport { SEARCH_BOOKS } from '../types';\nimport dotenv from 'dotenv';\n\nconst BookState = (props) => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false,\n  };\n\n  const env = dotenv.config();\n\n  console.log(env);\n\n  const [state, dispatch] = useReducer(BookReducer, initialState);\n\n  // Search Books\n  const searchBooks = async (text) => {\n    console.log('started search');\n    const res = await axios.get(`https://www.goodreads.com/search/index.xml?key=${text}&q=${text}`);\n    console.log(res);\n    dispatch({ type: SEARCH_BOOKS, payload: res.data });\n  };\n\n  return (\n    <BookContext.Provider\n      value={{\n        books: state.books,\n        // book: state.book,\n        // loading: state.loading,\n        searchBooks,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookState;\n"]},"metadata":{},"sourceType":"module"}