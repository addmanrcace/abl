{"ast":null,"code":"var _jsxFileName = \"/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js\";\nimport React, { useReducer } from 'react'; // import axios from 'axios';\n\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport { SEARCH_BOOKS } from '../types'; // import dotenv from 'dotenv';\n// const dotenv = require('dotenv');\n\nconst BookState = props => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false\n  }; // const env = dotenv.config().parsed;\n  // console.log(env);\n\n  const [state, dispatch] = useReducer(BookReducer, initialState); // Search Books\n\n  const searchBooks = async text => {\n    console.log('started search'); // const res = await axios.get(`https://www.goodreads.com/search/index.xml?key=${key}&q=${text}`);\n    // console.log(res);\n\n    dispatch({\n      type: SEARCH_BOOKS,\n      payload: res.data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(BookContext.Provider, {\n    value: {\n      books: state.books,\n      // book: state.book,\n      // loading: state.loading,\n      searchBooks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BookState;","map":{"version":3,"sources":["/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js"],"names":["React","useReducer","BookContext","BookReducer","SEARCH_BOOKS","BookState","props","initialState","books","book","loading","state","dispatch","searchBooks","text","console","log","type","payload","res","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB,CAD2B,CAO3B;AAEA;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACE,WAAD,EAAcI,YAAd,CAApC,CAX2B,CAa3B;;AACA,QAAMM,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADkC,CAElC;AACA;;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb,YAAR;AAAsBc,MAAAA,OAAO,EAAEC,GAAG,CAACC;AAAnC,KAAD,CAAR;AACD,GALD;;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,KAAK,EAAEG,KAAK,CAACH,KADR;AAEL;AACA;AACAK,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,KAAK,CAACe,QART,CADF;AAYD,CAjCD;;AAmCA,eAAehB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\n// import axios from 'axios';\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport { SEARCH_BOOKS } from '../types';\n// import dotenv from 'dotenv';\n// const dotenv = require('dotenv');\n\nconst BookState = (props) => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false,\n  };\n\n  // const env = dotenv.config().parsed;\n\n  // console.log(env);\n\n  const [state, dispatch] = useReducer(BookReducer, initialState);\n\n  // Search Books\n  const searchBooks = async (text) => {\n    console.log('started search');\n    // const res = await axios.get(`https://www.goodreads.com/search/index.xml?key=${key}&q=${text}`);\n    // console.log(res);\n    dispatch({ type: SEARCH_BOOKS, payload: res.data });\n  };\n\n  return (\n    <BookContext.Provider\n      value={{\n        books: state.books,\n        // book: state.book,\n        // loading: state.loading,\n        searchBooks,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookState;\n"]},"metadata":{},"sourceType":"module"}