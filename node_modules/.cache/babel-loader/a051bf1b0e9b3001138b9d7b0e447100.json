{"ast":null,"code":"var _jsxFileName = \"/home/addmanrcace/websites/addison.codes/abl/src/components/auth/Register.js\";\nimport React, { useState, useContext, useEffect, Fragment } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Register = props => {\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    isAuthenticated,\n    error\n  } = authContext;\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert\n  } = alertContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full max-w-xs mx-auto mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/addmanrcace/websites/addison.codes/abl/src/components/auth/Register.js"],"names":["React","useState","useContext","useEffect","Fragment","AuthContext","AlertContext","Register","props","authContext","register","isAuthenticated","error","alertContext","setAlert","history","push","user","setUser","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Register = props => {\n  const authContext = useContext(AuthContext);\n  const { register, isAuthenticated, error } = authContext;\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n  const onSubmit = e => {\n    e.preventDefault();\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password,\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full max-w-xs mx-auto mt-5\">\n        <form onSubmit={onSubmit} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n          <div className=\"mb-4\">\n            <label htmlFor=\"name\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={onChange}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              required\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              required\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              required\n              minLength=\"6\"\n            />\n          </div>\n          <div className=\"\">\n            <label htmlFor=\"password2\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password2\"\n              value={password2}\n              onChange={onChange}\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              required\n              minLength=\"6\"\n            />\n          </div>\n          <input type=\"submit\" value=\"Register\" className=\"\" />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}