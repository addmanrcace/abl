{"ast":null,"code":"var _jsxFileName = \"/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport xml2js from 'xml2js';\nimport { SEARCH_BOOKS, SET_LOADING } from '../types';\n\nconst BookState = props => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false\n  };\n  const key = 'e3tRV8bBX3V9UzUCLr0A';\n  const [state, dispatch] = useReducer(BookReducer, initialState); // Search Books\n\n  const searchBooks = async text => {\n    setLoading();\n    const xml = await axios.get(`https://cors-anywhere.herokuapp.com/https://www.goodreads.com/search/index.xml?key=${key}&q=${text}`);\n    xml2js.parseString(xml.data, (err, res) => {\n      if (err) {\n        console.log(err);\n      } else {\n        const bookData = res.GoodreadsResponse.search[0].results[0].work[0];\n        console.log(res.GoodreadsResponse.search[0].results[0].work.best_book);\n        const searchedBooks = bookData.map(book => (book.id = res.GoodreadsResponse.search[0].results[0].work.best_book, console.log(book)));\n        console.log(searchedBooks);\n        dispatch({\n          type: SEARCH_BOOKS,\n          payload: searchedBooks\n        });\n      }\n    });\n  }; // Set loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(BookContext.Provider, {\n    value: {\n      books: state.books,\n      // book: state.book,\n      loading: state.loading,\n      searchBooks,\n      setLoading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BookState;","map":{"version":3,"sources":["/home/addmanrcace/websites/addison.codes/abl/src/context/books/BookState.js"],"names":["React","useReducer","axios","BookContext","BookReducer","xml2js","SEARCH_BOOKS","SET_LOADING","BookState","props","initialState","books","book","loading","key","state","dispatch","searchBooks","text","setLoading","xml","get","parseString","data","err","res","console","log","bookData","GoodreadsResponse","search","results","work","best_book","searchedBooks","map","id","type","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,UAA1C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,OAAO,EAAE;AAHU,GAArB;AAMA,QAAMC,GAAG,GAAG,sBAAZ;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACG,WAAD,EAAcM,YAAd,CAApC,CAT2B,CAW3B;;AACA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClCC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,sFAAqFP,GAAI,MAAKI,IAAK,EAA9G,CAAlB;AACAb,IAAAA,MAAM,CAACiB,WAAP,CAAmBF,GAAG,CAACG,IAAvB,EAA6B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,OAFD,MAEO;AACL,cAAMI,QAAQ,GAAGH,GAAG,CAACI,iBAAJ,CAAsBC,MAAtB,CAA6B,CAA7B,EAAgCC,OAAhC,CAAwC,CAAxC,EAA2CC,IAA3C,CAAgD,CAAhD,CAAjB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,iBAAJ,CAAsBC,MAAtB,CAA6B,CAA7B,EAAgCC,OAAhC,CAAwC,CAAxC,EAA2CC,IAA3C,CAAgDC,SAA5D;AACA,cAAMC,aAAa,GAAGN,QAAQ,CAACO,GAAT,CAAcvB,IAAD,KAAYA,IAAI,CAACwB,EAAL,GAAUX,GAAG,CAACI,iBAAJ,CAAsBC,MAAtB,CAA6B,CAA7B,EAAgCC,OAAhC,CAAwC,CAAxC,EAA2CC,IAA3C,CAAgDC,SAA3D,EAAuEP,OAAO,CAACC,GAAR,CAAYf,IAAZ,CAAlF,CAAb,CAAtB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ;AACAlB,QAAAA,QAAQ,CAAC;AAAEqB,UAAAA,IAAI,EAAE/B,YAAR;AAAsBgC,UAAAA,OAAO,EAAEJ;AAA/B,SAAD,CAAR;AACD;AACF,KAVD;AAWD,GAdD,CAZ2B,CA4B3B;;;AACA,QAAMf,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAE9B;AAAR,GAAD,CAAjC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAEL;AACAE,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHV;AAILI,MAAAA,WAJK;AAKLE,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGV,KAAK,CAAC8B,QATT,CADF;AAaD,CA5CD;;AA8CA,eAAe/B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport BookContext from './bookContext';\nimport BookReducer from './bookReducer';\nimport xml2js from 'xml2js';\nimport { SEARCH_BOOKS, SET_LOADING } from '../types';\n\nconst BookState = (props) => {\n  const initialState = {\n    books: [],\n    book: {},\n    loading: false,\n  };\n\n  const key = 'e3tRV8bBX3V9UzUCLr0A';\n\n  const [state, dispatch] = useReducer(BookReducer, initialState);\n\n  // Search Books\n  const searchBooks = async (text) => {\n    setLoading();\n    const xml = await axios.get(`https://cors-anywhere.herokuapp.com/https://www.goodreads.com/search/index.xml?key=${key}&q=${text}`);\n    xml2js.parseString(xml.data, (err, res) => {\n      if (err) {\n        console.log(err);\n      } else {\n        const bookData = res.GoodreadsResponse.search[0].results[0].work[0];\n        console.log(res.GoodreadsResponse.search[0].results[0].work.best_book);\n        const searchedBooks = bookData.map((book) => ((book.id = res.GoodreadsResponse.search[0].results[0].work.best_book), console.log(book)));\n        console.log(searchedBooks);\n        dispatch({ type: SEARCH_BOOKS, payload: searchedBooks });\n      }\n    });\n  };\n\n  // Set loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <BookContext.Provider\n      value={{\n        books: state.books,\n        // book: state.book,\n        loading: state.loading,\n        searchBooks,\n        setLoading,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookState;\n"]},"metadata":{},"sourceType":"module"}